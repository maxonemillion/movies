{"version":3,"sources":["utils/API2.js","utils/API.js","components/Main.js","App.js","index.js"],"names":["id","options","method","url","params","source_id","source","country","headers","process","axios","request","BASEURL","APIKEY","query","console","log","get","Main","useState","movies","setMovies","searchTitle","setSearchTitle","display","setDisplay","platforms","setPlatforms","handleSubmit","e","preventDefault","API","then","res","data","API2","imdbID","res2","catch","err","Form","Group","className","Control","autoComplete","type","placeholder","onChange","event","target","value","onKeyDown","keyCode","Button","variant","onClick","Container","Row","Col","Card","style","width","border","src","Poster","alt","Body","Title","Text","Plot","Director","Year","Genre","Rated","imdbRating","collection","locations","map","streams","href","rel","display_name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4590df7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    platforms: function (id) {\n        const options = {\n          method: 'GET',\n          url: 'https://utelly-tv-shows-and-movies-availability-v1.p.rapidapi.com/idlookup',\n          params: {source_id: id, source: 'imdb', country: 'us'},\n          headers: {\n            'x-rapidapi-key': process.env.REACT_APP_PLATFORMS_KEY,\n            'x-rapidapi-host': 'utelly-tv-shows-and-movies-availability-v1.p.rapidapi.com'\n          }\n        };\n        \n        return axios.request(options)\n        \n      }\n}","import axios from \"axios\";\nconst BASEURL = \"http://www.omdbapi.com/?t=\";\nconst APIKEY = process.env.REACT_APP_MOVIES_KEY;\n\nexport default {\n  search: function (query) {\n    console.log(BASEURL + query + APIKEY)\n    return axios.get(BASEURL + query + APIKEY);\n  }\n}","import { Form, Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport API2 from \"../utils/API2\";\nimport API from \"../utils/API\";\nimport \"./Main.css\"\n\n\nconst Main = () => {\n  const [movies, setMovies] = useState({});\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [display, setDisplay] = useState(false);\n  const [platforms, setPlatforms] = useState({});\n\n  function loadTitles(query) {\n    API.search(query)\n      .then(res => {\n        console.log(res.data)\n        API2.platforms(res.data.imdbID)\n        .then(res2 => {\n          console.log(res2.data)\n          setMovies(res.data);\n          setPlatforms(res2.data);\n          })\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    loadTitles(searchTitle)\n    // loadPlatforms(movies.imdbID)\n    setDisplay(!display)\n  };\n\n  const handleKeypress = e => {\n    if (e.keyCode === 13) {\n      handleSubmit(e);\n    }\n  };\n\n\n  return (\n    <div>\n      <Form.Group className=\"form\">\n        <Form.Control\n          autoComplete=\"off\"\n          type=\"text\"\n          id=\"movie-input\"\n          placeholder=\"Find a movie\"\n          onChange={(event) => setSearchTitle(event.target.value)}\n          onKeyDown={handleKeypress}\n          value={searchTitle} />\n        <div className=\"wrapper\">\n          <Button className=\"btn\"\n            id=\"search-button\"\n            variant=\"light\"\n            type=\"submit\"\n            onClick={handleSubmit}\n          >Search\n            </Button>\n        </div>\n        <br />\n\n      </Form.Group>\n\n\n\n      {/* {Object.keys(movies).map(key => {\n          if (!Array.isArray(movies[key])) {\n            return <li>{key}: {movies[key]}</li>;\n          }\n        })}\n      </li> */}\n\n\n      <Container>\n        <Row>\n          <Col>\n            <Card style={{ width: '18rem', border: \"none\" }} className=\"card1\">\n              <img className={display ? \"display\" : null} id=\"image\" src={movies.Poster} alt=\"poster\" />\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: '18rem', border: \"none\" }} className=\"card\">\n              <Card.Body className=\"main-card\">\n                <br></br>\n                <Card.Title className=\"title\">{movies.Title}</Card.Title>\n                <Card.Text className=\"list\">\n                  <li className={display ? \"display\" : null}>\n                    {movies.Plot}\n                    <br></br>\n                    <br></br>\n            Directed by {movies.Director}\n                    <br></br>\n            Released in {movies.Year}\n                    <br></br>\n                    {movies.Genre}\n                    <br></br>\n            Rated {movies.Rated}\n                    <br></br>\n            IMDb: {movies.imdbRating}\n                    <br></br>\n                    <br></br>\n                    \n            {platforms.collection?.locations.map((streams) => {\n              return (\n                <ul>\n                  <a href={streams.url} rel=\"noreferrer\" target=\"_blank\">{streams.display_name}</a>\n                </ul>\n              )\n            })}\n                    \n                  </li>\n                  <br></br>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n    </div >\n  )\n}\n\nexport default Main;\n","import Main from \"./components/Main\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Main />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}